name: E2E test

on:
  workflow_dispatch:
    inputs:
      cases:
        description: 'specific cases to be excuted. Sample: ["./aad/a.tests.ts", "./bot/b.tests.ts"]. Set empty to run all cases'
        required: false
  schedule:
    - cron: "0 5 * * *"
  pull_request:
    branches:
      - main
      - dev
      - ga
      - hotfix/**/*
    types:
      - assigned
      - opened
      - synchronize
      - reopened
      - edited

jobs:

  report:
    if: ${{ always() }}
    needs: execute-case
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dateutils
        run: |
          sudo apt install dateutils

      - uses: actions/download-artifact@v3
        with:
          path: ~/artifacts

      - name: set id
        id: setId
        uses: ayachensiyuan/get-action-job-id@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          run-id: ${{ github.run_id }}
          run-attempt: ${{ github.run_attempt }}
      - name: get id
        run: echo "the job id is ${{ steps.setId.outputs.jobId }}"

      - name: List jobs
        id: list-jobs
        working-directory: packages/cli
        run: |
          jobs=`curl \
            -u :${{ secrets.GITHUB_TOKEN }} \
            https://api.github.com/repos/OfficeDev/TeamsFx/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}/jobs?per_page=100`

          cases=`echo $jobs| jq -r '.jobs[] | select(.name | contains("tests.ts")) | .name'`

          lists=""
          passed=0
          failed=0

          emails="vsciotadt@microsoft.com;v-helzha@microsoft.com;v-ivanchen@microsoft.com"
          while IFS= read -r case;
          do
            if [ -z "$case" ]; then
              continue
            fi

            file="tests/e2e/$case"
            elegant_path="${file//.\//}"

            email=""
            if grep -q "@author" $file; then
              email=`grep '@author' $file | grep -i -o '[A-Z0-9._%+-]\+@[A-Z0-9.-]\+\.[A-Z]\{2,4\}'`
            fi

            status=`echo $jobs | jq --arg case $case -r '.jobs[] | select(.name == $case ) | .conclusion'`

            if [[ ! -z "$email" && ! "$emails" == *"$email"* && "$status" == "failure" ]]; then
              emails="$emails;$email"
            fi

            started_at=`echo $jobs | jq --arg case $case -r '.jobs[] | select(.name == $case ) | .steps[] | select(.name == "run test") | .started_at'`
            completed_at=`echo $jobs | jq --arg case $case -r '.jobs[] | select(.name == $case ) | .steps[] | select(.name == "run test") | .completed_at'`
            duration=`dateutils.ddiff $started_at $completed_at -f "%Mm %Ss"`

            author=""
            if [ -z "$email" ]; then
              author="N/A"
            else
              author="<a href=\\\"mailto:$email\\\"><span>$email</span></a>"
            fi

            lable=""
            if [ "$status" == "success" ]; then
              passed=$((passed+1))
              label="<span style=\\\"background-color:#2aa198;color:white;font-weight:bold;\\\">PASSED</span>"
            else
              failed=$((failed+1))
              label="<span style=\\\"background-color: #dc322f;color:white;font-weight:bold;\\\">FAILED</span>"
            fi

            job_id=`echo $jobs| jq --arg case $case -r '.jobs[] | select(.name == $case ) | .id'`
            metrics_file=`find ~/artifacts -name "*${job_id}_metrics/output.txt"`
            slow=`cat $metrics_file | grep '"severity":"slow"' | wc -l`

            url=`echo $jobs | jq --arg case $case -r '.jobs[] | select(.name == $case ) | .html_url'`
            url="<a href=\\\"$url\\\">For Detail</a>"

            row="<tr> <td style=\\\"text-align: left;\\\">$elegant_path</td> <td style=\\\"text-align: center;\\\">$label</td> <td style=\\\"text-align: center;\\\">$author</td> <td style=\\\"text-align: center;\\\">$duration</td> <td style=\\\"text-align: center;\\\">$slow</td> <td style=\\\"text-align: center;\\\">$url</td> </tr>"

            if [ "$status" == "success" ]; then
              lists="$lists $row"
            else
              lists="$row $lists"
            fi

          done <<< $cases

          body="<table class=\\\"w3-table w3-striped w3-bordered\\\"> <tr> <th>CASE</th> <th>STATUS</th> <th>AUTHOR</th> <th>DURATION</th> <th>SLOW METHOD( > 20ms )</th> <th>URL</th> </tr> $lists </table> <br /> The detail can be found here: <a> https://github.com/OfficeDev/TeamsFx/actions/runs/${{ github.run_id }} </a>"

          total=$((passed+failed))

          subject="TeamsFx E2E Test Report ($passed/$total Passed)"
          if [ $failed -gt 0 ]; then
            subject="[FAILED] $subject"
          else
            subject="[PASSED] $subject"
          fi

          echo "::set-output name=body::$body"
          echo "::set-output name=to::$emails"
          echo "::set-output name=subject::$subject"

      - name: Send E-mail to the whole team
        uses: satak/webrequest-action@master
        with:
          url: https://prod-30.eastus.logic.azure.com:443/workflows/9aa865da96054bd89749c2d4ce68df8e/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uIoB06NUHSnKoZeWjNDI9t4rrhbTBKxJNiBtDoMRSQs
          method: POST
          payload: |
            {
              "to": "v-ivanchen@microsoft.com",
              "body": "${{ steps.list-jobs.outputs.body }}",
              "subject": "${{ steps.list-jobs.outputs.subject }}",
              "apiKey": "${{ secrets.MAIL_API_KEY }}"
            }
